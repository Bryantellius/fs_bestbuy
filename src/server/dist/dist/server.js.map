{"version":3,"file":"server.js","mappings":"kGAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQE,oBAAQC,IAARD,EAARF;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQ,uBAARA;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQ,wBAAO,KAAP,CAARA;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQE,8BAAe,gBAAKE,SAAL,EAAgB,iBAAhB,CAAfF,CAARF;;AAEA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQ,MAARA,EAAgBK,kBAAhBL;;AAEA;AACA;AACA;AACA;AACAA,GAAG,CAACC,GAAJD,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;EAC1B,IAAI;IACFD,GAAG,CAACE,QAAJF,CAAa,gBAAKH,SAAL,EAAgB,4BAAhB,CAAbG;EADF,EAEE,OAAOG,KAAP,EAAc;IACdF,IAAI,CAACE,KAAD,CAAJF;EACD;AALH;;AAQA;AACA;AACA;AACAR,GAAG,CAACC,GAAJD,CAAQW,0BAARX;;AAEA;AACA;AACA;AACA;AACAA,GAAG,CAACY,MAAJZ,CAAWa,mBAAOC,IAAPD,IAAe,IAA1Bb,EAAgC;IAC9Be,OAAO,CAACC,GAARD,oCAAwCF,mBAAOC,IAA/C,SAD8B,EAAhC","names":["app","use","express","json","__dirname","apiRouter","req","res","next","sendFile","error","errorHandler","listen","config","port","console","log"],"sources":["../server.js"],"sourcesContent":["import express from \"express\";\r\nimport morgan from \"morgan\";\r\nimport cors from \"cors\";\r\nimport apiRouter from \"./routes\";\r\nimport config from \"./config\";\r\nimport { errorHandler } from \"./middlewares/errorHandler\";\r\nimport { join } from \"path\";\r\n\r\nconst app = express();\r\n\r\n/**\r\n * Parses incoming request body as json if header indicates application/json\r\n */\r\napp.use(express.json());\r\n\r\n/**\r\n * Enables incoming requests from cross origin domains\r\n */\r\napp.use(cors());\r\n\r\n/**\r\n * Logs incoming request information to the dev console\r\n */\r\napp.use(morgan(\"dev\"));\r\n\r\n/**\r\n * Directs incoming static asset requests to the public folder\r\n */\r\napp.use(express.static(join(__dirname, \"../client/build\")));\r\n\r\n/**\r\n * Directs all routes starting with /api to the top level api express router\r\n */\r\napp.use(\"/api\", apiRouter);\r\n\r\n/**\r\n * Sends the react app index.html for page requests\r\n * Only needed in production when you are not using the react dev server\r\n */\r\napp.use((req, res, next) => {\r\n  try {\r\n    res.sendFile(join(__dirname, \"../client/build/index.html\"));\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\n/**\r\n * Error handler middleware\r\n */\r\napp.use(errorHandler);\r\n\r\n/**\r\n * Bind the app to a specified port\r\n * You can access your app at http://localhost:<port>\r\n */\r\napp.listen(config.port || 8080, () =>\r\n  console.log(`Server listening on port ${config.port}...`)\r\n);\r\n"]}
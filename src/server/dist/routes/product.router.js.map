{"version":3,"file":"product.router.js","names":["router","express","Router","get","req","res","next","id","params","parseInt","isNaN","err","Error","status","products","findOneById","results","findAll","json","msg","post","body","createOne","insertId","put","updateOne","affectedRows","deleteOne"],"sources":["../../routes/product.router.js"],"sourcesContent":["import express from \"express\";\r\nimport * as products from \"../controllers/products.controller\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:id?\", async (req, res, next) => {\r\n  try {\r\n    let { id } = req.params;\r\n    let results;\r\n\r\n    if (id) {\r\n      id = parseInt(id);\r\n\r\n      if (isNaN(id)) {\r\n        let err = new Error(\"ProductID must be of type 'number'\");\r\n        err.status = 400;\r\n        throw err;\r\n      }\r\n\r\n      [results] = await products.findOneById(id);\r\n    } else {\r\n      results = await products.findAll();\r\n    }\r\n\r\n    res.json(results || { msg: `No products found with id: ${id}` });\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nrouter.post(\"/\", async (req, res, next) => {\r\n  try {\r\n    let { body } = req;\r\n\r\n    let { insertId } = await products.createOne(body);\r\n    res.json({\r\n      id: insertId,\r\n      msg: \"Successfully added product\",\r\n    });\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nrouter.put(\"/:id\", async (req, res, next) => {\r\n  try {\r\n    let { body } = req;\r\n    let id = parseInt(req.params.id);\r\n\r\n    if (isNaN(id)) {\r\n      let err = new Error(\"ProductID must be of type 'number'\");\r\n      err.status = 400;\r\n      throw err;\r\n    } else {\r\n      let { affectedRows } = await products.updateOne(body, id);\r\n      res.json({\r\n        id,\r\n        msg:\r\n          affectedRows > 0\r\n            ? \"Successfully updated product(s)\"\r\n            : `No product found to update with id: ${id}`,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nrouter.delete(\"/:id\", async (req, res, next) => {\r\n  try {\r\n    let id = parseInt(req.params.id);\r\n\r\n    if (isNaN(id)) {\r\n      let err = new Error(\"ProductID must be of type 'number'\");\r\n      err.status = 400;\r\n      throw err;\r\n    } else {\r\n      let { affectedRows } = await products.deleteOne(id);\r\n      res.json({\r\n        id,\r\n        msg:\r\n          affectedRows > 0\r\n            ? \"Successfully deleted product(s)\"\r\n            : `No product found to delete with id: ${id}`,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"sgBAAA;AACA,sF;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,GAAP,CAAW,OAAX,qHAAoB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;;YAEVC,EAFU,GAEHH,GAAG,CAACI,MAFD,CAEVD,EAFU;;;YAKZA,EALY;YAMdA,EAAE,GAAGE,QAAQ,CAACF,EAAD,CAAb,CANc;;YAQVG,KAAK,CAACH,EAAD,CARK;YASRI,GATQ,GASF,IAAIC,KAAJ,CAAU,oCAAV,CATE;YAUZD,GAAG,CAACE,MAAJ,GAAa,GAAb,CAVY;cAWNF,GAXM;;;cAcIG,QAAQ,CAACC,WAAT,CAAqBR,EAArB,CAdJ,mIAcbS,OAda;;cAgBEF,QAAQ,CAACG,OAAT,EAhBF,UAgBdD,OAhBc;;;YAmBhBX,GAAG,CAACa,IAAJ,CAASF,OAAO,IAAI,EAAEG,GAAG,uCAAgCZ,EAAhC,CAAL,EAApB,EAnBgB;;YAqBhBD,IAAI,aAAJ,CArBgB,0EAApB;;;;AAyBAN,MAAM,CAACoB,IAAP,CAAY,GAAZ,sHAAiB,kBAAOhB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;;YAEPe,IAFO,GAEEjB,GAFF,CAEPiB,IAFO;;cAIYP,QAAQ,CAACQ,SAAT,CAAmBD,IAAnB,CAJZ,gDAIPE,QAJO,yBAIPA,QAJO;YAKblB,GAAG,CAACa,IAAJ,CAAS;cACPX,EAAE,EAAEgB,QADG;cAEPJ,GAAG,EAAE,4BAFE,EAAT,EALa;;;YAUbb,IAAI,cAAJ,CAVa,2EAAjB;;;;AAcAN,MAAM,CAACwB,GAAP,CAAW,MAAX,sHAAmB,kBAAOpB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;;YAETe,IAFS,GAEAjB,GAFA,CAETiB,IAFS;YAGXd,EAHW,GAGNE,QAAQ,CAACL,GAAG,CAACI,MAAJ,CAAWD,EAAZ,CAHF;;YAKXG,KAAK,CAACH,EAAD,CALM;YAMTI,GANS,GAMH,IAAIC,KAAJ,CAAU,oCAAV,CANG;YAObD,GAAG,CAACE,MAAJ,GAAa,GAAb,CAPa;cAQPF,GARO;;cAUgBG,QAAQ,CAACW,SAAT,CAAmBJ,IAAnB,EAAyBd,EAAzB,CAVhB,iDAUPmB,YAVO,yBAUPA,YAVO;YAWbrB,GAAG,CAACa,IAAJ,CAAS;cACPX,EAAE,EAAFA,EADO;cAEPY,GAAG;cACDO,YAAY,GAAG,CAAf;cACI,iCADJ;cAE2CnB,EAF3C,CAHK,EAAT,EAXa;;;;YAoBfD,IAAI,cAAJ,CApBe,4EAAnB;;;;AAwBAN,MAAM,UAAN,CAAc,MAAd,sHAAsB,kBAAOI,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;;YAEdC,EAFc,GAETE,QAAQ,CAACL,GAAG,CAACI,MAAJ,CAAWD,EAAZ,CAFC;;YAIdG,KAAK,CAACH,EAAD,CAJS;YAKZI,GALY,GAKN,IAAIC,KAAJ,CAAU,oCAAV,CALM;YAMhBD,GAAG,CAACE,MAAJ,GAAa,GAAb,CANgB;cAOVF,GAPU;;cASaG,QAAQ,CAACa,SAAT,CAAmBpB,EAAnB,CATb,iDASVmB,YATU,yBASVA,YATU;YAUhBrB,GAAG,CAACa,IAAJ,CAAS;cACPX,EAAE,EAAFA,EADO;cAEPY,GAAG;cACDO,YAAY,GAAG,CAAf;cACI,iCADJ;cAE2CnB,EAF3C,CAHK,EAAT,EAVgB;;;;YAmBlBD,IAAI,cAAJ,CAnBkB,4EAAtB,kF;;;;AAuBeN,M"}